@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model TestWebAPI.Pages.IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<h1>Start page</h1>

<form method="post" asp-antiforgery="true">
    <p>
        <input type="date" min="@Model.minDate.ToString("yyyy-MM-dd")" max="@Model.maxDate_from.ToString("yyyy-MM-dd")" value="@Model.maxDate_from.ToString("yyyy-MM-dd")" asp-for=requestData.date_from />

        <input type="date" min="@Model.minDate.ToString("yyyy-MM-dd")" max="@Model.maxDate_to.ToString("yyyy-MM-dd")" value="@Model.maxDate_to.ToString("yyyy-MM-dd")" asp-for=requestData.date_to />
    </p>
    <p>
        <select asp-for="requestData.Country">
            <option>Choose country please...</option>
            @if(Model.Countries != null)
            {
                foreach(var country in Model.Countries)
                {
                    <option>@country.Name</option>
                }
            }
         </select>
    </p>    
    <input type="submit" value="Отправить" />
</form>

<p>@Model.Mess</p>

<!-- <div id="MyChart"></div>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script>
    Highcharts.chart('MyChart', {
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Covid-19 data.'
        },
        subtitle: {
            text: 'According to the COIVD-19 API'
        },
        xAxis: {
            reversed: false,
            title: {
                enabled: true,
                text: 'Altitude'
            },
            labels: {
                format: '{value} km'
            },
            accessibility: {
                rangeDescription: 'Range: 0 to 80 km.'
            },
            maxPadding: 0.05,
            showLastLabel: true
        },
        yAxis: {
            title: {
                text: 'Temperature'
            },
            labels: {
                format: '{value}°'
            },
            accessibility: {
                rangeDescription: 'Range: -90°C to 20°C.'
            },
            lineWidth: 2
        },
        legend: {
            enabled: false
        },
        tooltip: {
            headerFormat: '<b>{series.name}</b><br/>',
            pointFormat: '{point.x} km: {point.y}°C'
        },
        plotOptions: {
            spline: {
                marker: {
                    enable: false
                }
            }
        },
        series: [{
            name: 'Temperature',
            data: [[0, 15], [10, -50], [20, -56.5], [30, -46.5], [40, -22.1],
                [50, -2.5], [60, -27.7], [70, -55.7], [80, -76.5]]            
        },
        {
            name: 'TestGraph2',
            data: [[0, 10], [5, -50], [10, -9.5], [30, -46.5], [40, -22.1],
                [50, -2.5], [6, -27.7], [60, -25.7], [50, -76.5]]
        }]
    });
</script> -->

<div>
  <canvas id="myChart" width="60" height="30"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>    
  const data = {
    labels: ['yes', 'no'],
    datasets: [{
      label: 'Confimed',
      backgroundColor: 'rgb(255, 99, 132)',
      borderColor: 'rgb(255, 99, 132)',
      data: [1, 2],
    }]
  };

  const config = {
    type: 'line',
    data: data,
    options: {}
  };
</script>

<script>
  const myChart = new Chart(
    document.getElementById('myChart'),
    config,
  );
</script>
